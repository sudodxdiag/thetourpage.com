if (function(e, o, n) {
        var a, i = e.getElementsByTagName(o)[0];
        e.getElementById(n) || ((a = e.createElement(o)).id = n, a.src = "//connect.facebook.net/en_US/sdk.js", i.parentNode.insertBefore(a, i))
    }(document, "script", "facebook-jssdk"), "undefined" != typeof mkdfSocialLoginVars) var facebookAppId = mkdfSocialLoginVars.social.facebookAppId;
facebookAppId && (window.fbAsyncInit = function() {
        FB.init({
            appId: facebookAppId,
            cookie: !0,
            xfbml: !0,
            version: "v2.5"
        }), window.FB = FB
    }),
    function(t) {
        "use strict";
        var e = {};

        function o() {
            var e = t(".mkdf-login-opener"),
                o = t(".mkdf-login-register-holder");
            if (t(document.body).on("open_user_login_trigger", function() {
                    o.fadeIn(300), o.addClass("opened")
                }), e) {
                var n = t(".mkdf-login-register-content");
                e.on("click", function(e) {
                    e.preventDefault(), o.fadeIn(300), o.addClass("opened")
                }), o.on("click", function(e) {
                    o.hasClass("opened") && (o.fadeOut(300), o.removeClass("opened"))
                }), n.on("click", function(e) {
                    e.stopPropagation()
                }), t(window).on("keyup", function(e) {
                    o.hasClass("opened") && 27 == e.keyCode && (o.fadeOut(300), o.removeClass("opened"))
                }), n.tabs()
            }
        }

        function n() {
            t(".mkdf-login-form").on("submit", function(e) {
                e.preventDefault();
                var o = {
                    action: "mkdf_membership_login_user",
                    security: t(this).find("#mkdf-login-security").val(),
                    login_data: t(this).serialize()
                };
                return t.ajax({
                    type: "POST",
                    data: o,
                    url: mkdfGlobalVars.vars.mkdfAjaxUrl,
                    success: function(e) {
                        var o;
                        s(o = JSON.parse(e)), "success" == o.status && (window.location = o.redirect)
                    }
                }), !1
            })
        }

        function a() {
            t(".mkdf-register-form").on("submit", function(e) {
                e.preventDefault();
                var o = {
                    action: "mkdf_membership_register_user",
                    security: t(this).find("#mkdf-register-security").val(),
                    register_data: t(this).serialize()
                };
                return t.ajax({
                    type: "POST",
                    data: o,
                    url: mkdfGlobalVars.vars.mkdfAjaxUrl,
                    success: function(e) {
                        var o;
                        s(o = JSON.parse(e)), "success" == o.status && (window.location = o.redirect)
                    }
                }), !1
            })
        }

        function i() {
            var n = t(".mkdf-reset-pass-form");
            n.submit(function(e) {
                e.preventDefault();
                var o = {
                    action: "mkdf_membership_user_lost_password",
                    user_login: n.find("#user_reset_password_login").val()
                };
                t.ajax({
                    type: "POST",
                    data: o,
                    url: mkdfGlobalVars.vars.mkdfAjaxUrl,
                    success: function(e) {
                        var o = JSON.parse(e);
                        s(o), "success" == o.status && (window.location = o.redirect)
                    }
                })
            })
        }

        function s(e) {
            var o = t(".mkdf-membership-response-holder"),
                n = _.template(t(".mkdf-membership-response-template").html())({
                    messageClass: "success" === e.status ? "mkdf-membership-message-succes" : "mkdf-membership-message-error",
                    message: e.message
                });
            o.html(n)
        }

        function r() {
            t(".mkdf-facebook-login-holder").submit(function(e) {
                e.preventDefault(), window.FB.login(function(e) {
                    ! function(e) {
                        "connected" === e.status ? (console.log("Welcome! Fetching information from Facebook..."), FB.api("/me", "GET", {
                            fields: "id, name, email, link, picture"
                        }, function(e) {
                            var o = t(".mkdf-facebook-login-holder [name^=mkdf_nonce_facebook_login]").val();
                            e.nonce = o, e.image = e.picture.data.url;
                            var n = {
                                action: "mkdf_membership_check_facebook_user",
                                response: e
                            };
                            t.ajax({
                                type: "POST",
                                data: n,
                                url: mkdfGlobalVars.vars.mkdfAjaxUrl,
                                success: function(e) {
                                    var o;
                                    s(o = JSON.parse(e)), "success" == o.status && (window.location = o.redirect)
                                }
                            })
                        })) : "not_authorized" === e.status ? console.log("Please log into this app") : console.log("Please log into Facebook")
                    }(e)
                }, {
                    scope: "email, public_profile"
                })
            })
        }

        function d() {
            if ("undefined" != typeof mkdfSocialLoginVars) var e = mkdfSocialLoginVars.social.googleClientId;
            e ? gapi.load("auth2", function() {
                window.auth2 = gapi.auth2.init({
                    client_id: e
                }), t(".mkdf-google-login-holder").submit(function(e) {
                    e.preventDefault(), window.auth2.signIn(),
                        function() {
                            if (window.auth2.isSignedIn.get()) {
                                var e = window.auth2.currentUser.get(),
                                    o = e.getBasicProfile(),
                                    n = t(".mkdf-google-login-holder [name^=mkdf_nonce_google_login]").val(),
                                    a = {
                                        id: o.getId(),
                                        name: o.getName(),
                                        email: o.getEmail(),
                                        image: o.getImageUrl(),
                                        link: "https://plus.google.com/" + o.getId(),
                                        nonce: n
                                    },
                                    i = {
                                        action: "mkdf_membership_check_google_user",
                                        response: a
                                    };
                                t.ajax({
                                    type: "POST",
                                    data: i,
                                    url: mkdfGlobalVars.vars.mkdfAjaxUrl,
                                    success: function(e) {
                                        var o;
                                        s(o = JSON.parse(e)), "success" == o.status && (window.location = o.redirect)
                                    }
                                })
                            }
                        }()
                })
            }) : t(".mkdf-google-login-holder").submit(function(e) {
                e.preventDefault()
            })
        }
        "undefined" != typeof mkdf && (mkdf.modules.socialLogin = e), e.mkdfUserLogin = n, e.mkdfUserRegister = a, e.mkdfUserLostPassword = i, e.mkdfInitLoginWidgetModal = o, e.mkdfInitFacebookLogin = r, e.mkdfInitGooglePlusLogin = d, e.mkdfRenderAjaxResponseMessage = s, t(document).ready(function() {
            o(), n(), a(), i()
        }), t(window).on("load", function() {
            r(), d(),
                function() {
                    t(".mkdf-membership-main-wrapper");
                    var e = t(".page-template-user-dashboard .mkdf-content"),
                        o = t(".mkdf-page-footer"),
                        n = 0;
                    !mkdf.body.hasClass("mkdf-header-transparent") && 1024 < mkdf.windowWidth && (n = n + mkdfGlobalVars.vars.mkdfMenuAreaHeight + mkdfGlobalVars.vars.mkdfLogoAreaHeight);
                    0 < o.length && (n += o.outerHeight());
                    if (1024 < mkdf.windowWidth) {
                        var a = mkdf.windowHeight - n;
                        e.css({
                            "min-height": a + "px"
                        })
                    }
                }()
        }), t(window).resize(function() {}), t(window).scroll(function() {})
    }(jQuery),
    function(a) {
        "use strict";
        var e = {};

        function o() {
            n(), a(document.body).on("mkdf_membership_favorites_trigger", function() {
                n()
            })
        }

        function n() {
            a(".mkdf-membership-item-favorites").on("click", function(e) {
                e.preventDefault();
                var o, n = a(this);
                void 0 !== n.data("item-id") && (o = n.data("item-id")),
                    function(n, e) {
                        var o = {
                            action: "mkdf_membership_add_item_to_favorites",
                            item_id: e
                        };
                        a.ajax({
                            type: "POST",
                            data: o,
                            url: mkdfGlobalVars.vars.mkdfAjaxUrl,
                            success: function(e) {
                                var o = JSON.parse(e);
                                "success" == o.status && (n.hasClass("mkdf-icon-only") || n.find("span").text(o.data.message), n.find(".mkdf-favorites-icon").removeClass("fa-heart fa-heart-o").addClass(o.data.icon))
                            }
                        })
                    }(n, o)
            })
        }(mkdf.modules.membershipFavorites = e).mkdfOnDocumentReady = o, a(document).ready(o)
    }(jQuery);